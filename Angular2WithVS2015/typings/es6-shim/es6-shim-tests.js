/// <reference path="es6-shim.d.ts" />
var a;
var s;
var i;
var b;
var f;
var o;
var r;
var sym;
var e;
var date;
var key;
var point;
var point3d;
var arrayOfPoint;
var arrayOfPoint3D;
var arrayOfSymbol;
var arrayOfPropertyKey;
var arrayOfAny;
var arrayOfStringAny;
var arrayLikeOfAny;
var iterableOfPoint;
var iterableOfStringPoint;
var iterableOfPointPoint3D;
var iterableIteratorOfPoint;
var iterableIteratorOfNumberPoint;
var iterableIteratorOfNumber;
var iterableIteratorOfString;
var iterableIteratorOfPointPoint;
var iterableIteratorOfNode;
var iterableIteratorOfStringPoint;
var iterableIteratorOfAny;
var iterableIteratorOfPropertyKey;
var iterableIteratorOfPropertyKeyPoint;
var nodeList;
var pd;
var pdm;
var map;
var set;
var weakMap;
var weakSet;
var promiseLikeOfPoint;
var promiseLikeOfPoint3D;
var promiseOfPoint;
var promiseOfPoint3D;
var promiseOfArrayOfPoint;
var promiseOfVoid;
point = Object.assign(point, point);
b = Object.is(point, point);
Object.setPrototypeOf(point, point);
point = arrayOfPoint.find(function (p) { return b; });
i = arrayOfPoint.findIndex(function (p) { return b; });
arrayOfPoint = arrayOfPoint.fill(point, i, arrayOfPoint.length);
arrayOfPoint = arrayOfPoint.copyWithin(i, i, i);
arrayOfPoint = Array.from(arrayOfPoint);
arrayOfPoint = Array.from(iterableOfPoint);
arrayOfPoint3D = Array.from(arrayOfPoint, function (point) { return point3d; });
arrayOfPoint3D = Array.from(arrayOfPoint, function (point) { return point3d; }, a);
arrayOfPoint3D = Array.from(iterableOfPoint, function (point) { return point3d; });
arrayOfPoint3D = Array.from(iterableOfPoint, function (point) { return point3d; }, a);
arrayOfPoint = Array.of(point, point);
i = s.codePointAt(i);
b = s.includes(s, i);
b = s.endsWith(s, i);
s = s.repeat(i);
b = s.startsWith(s, i);
s = String.fromCodePoint(i, i);
s = (_a = ["abc"], _a.raw = ["abc"], String.raw(_a));
s = r.flags;
i = Number.EPSILON;
b = Number.isFinite(i);
b = Number.isInteger(i);
b = Number.isNaN(i);
b = Number.isSafeInteger(i);
i = Number.MAX_SAFE_INTEGER;
i = Number.MIN_SAFE_INTEGER;
i = Number.parseFloat(s);
i = Number.parseInt(s);
i = Number.parseInt(s, i);
i = Math.clz32(i);
i = Math.imul(i, i);
i = Math.sign(i);
i = Math.log10(i);
i = Math.log2(i);
i = Math.log1p(i);
i = Math.expm1(i);
i = Math.cosh(i);
i = Math.sinh(i);
i = Math.tanh(i);
i = Math.acosh(i);
i = Math.asinh(i);
i = Math.atanh(i);
i = Math.hypot(i, i);
i = Math.trunc(i);
i = Math.fround(i);
i = Math.cbrt(i);
map.clear();
map.delete(s);
map.forEach(function (value, key) { });
point = map.get(s);
b = map.has(s);
map = map.set(s, point);
i = map.size;
map = new Map();
map = new Map(iterableOfStringPoint);
set.clear();
set.delete(point);
set.forEach(function (value, key) { });
b = set.has(point);
set = set.add(point);
i = set.size;
set = new Set();
set = new Set(iterableOfPoint);
weakMap.delete(point);
point3d = weakMap.get(point);
b = weakMap.has(point);
weakMap = weakMap.set(point, point3d);
weakMap = new WeakMap();
weakMap = new WeakMap(iterableOfPointPoint3D);
weakSet.delete(point);
weakSet = weakSet.add(point);
b = weakSet.has(point);
weakSet = new WeakSet();
weakSet = new WeakSet(iterableOfPoint);
iterableIteratorOfNumberPoint = arrayOfPoint.entries();
iterableIteratorOfNumber = arrayOfPoint.keys();
iterableIteratorOfPoint = arrayOfPoint.values();
iterableIteratorOfPointPoint = set.entries();
iterableIteratorOfPoint = set.keys();
iterableIteratorOfPoint = set.values();
promiseLikeOfPoint.then(function (point) { });
promiseLikeOfPoint = promiseLikeOfPoint.then();
promiseLikeOfPoint = promiseLikeOfPoint.then(function (p) { return point; });
promiseLikeOfPoint = promiseLikeOfPoint.then(function (p) { return promiseLikeOfPoint; });
promiseLikeOfPoint = promiseLikeOfPoint.then(function (p) { return point; }, function (e) { return point; });
promiseLikeOfPoint = promiseLikeOfPoint.then(function (p) { return promiseLikeOfPoint; }, function (e) { return point; });
promiseLikeOfPoint = promiseLikeOfPoint.then(function (p) { return point; }, function (e) { return promiseLikeOfPoint; });
promiseLikeOfPoint = promiseLikeOfPoint.then(function (p) { return point; }, function (e) { });
promiseLikeOfPoint = promiseLikeOfPoint.then(function (p) { return promiseLikeOfPoint; }, function (e) { });
promiseLikeOfPoint3D = promiseLikeOfPoint.then(function (p) { return point3d; });
promiseLikeOfPoint3D = promiseLikeOfPoint.then(function (p) { return promiseLikeOfPoint3D; });
promiseLikeOfPoint3D = promiseLikeOfPoint.then(function (p) { return point3d; }, function (e) { return point3d; });
promiseLikeOfPoint3D = promiseLikeOfPoint.then(function (p) { return promiseLikeOfPoint3D; }, function (e) { return point3d; });
promiseLikeOfPoint3D = promiseLikeOfPoint.then(function (p) { return point3d; }, function (e) { return promiseLikeOfPoint3D; });
promiseLikeOfPoint3D = promiseLikeOfPoint.then(function (p) { return point3d; }, function (e) { });
promiseLikeOfPoint3D = promiseLikeOfPoint.then(function (p) { return promiseLikeOfPoint3D; }, function (e) { });
promiseOfPoint.then(function (point) { });
promiseOfPoint = promiseOfPoint.then();
promiseOfPoint = promiseOfPoint.then(function (p) { return point; });
promiseOfPoint = promiseOfPoint.then(function (p) { return promiseOfPoint; });
promiseOfPoint = promiseOfPoint.then(function (p) { return promiseLikeOfPoint; });
promiseOfPoint = promiseOfPoint.then(function (p) { return point; }, function (e) { return point; });
promiseOfPoint = promiseOfPoint.then(function (p) { return promiseOfPoint; }, function (e) { return point; });
promiseOfPoint = promiseOfPoint.then(function (p) { return promiseLikeOfPoint; }, function (e) { return point; });
promiseOfPoint = promiseOfPoint.then(function (p) { return point; }, function (e) { return promiseOfPoint; });
promiseOfPoint = promiseOfPoint.then(function (p) { return point; }, function (e) { return promiseLikeOfPoint; });
promiseOfPoint = promiseOfPoint.then(function (p) { return point; }, function (e) { });
promiseOfPoint = promiseOfPoint.then(function (p) { return promiseOfPoint; }, function (e) { });
promiseOfPoint = promiseOfPoint.then(function (p) { return promiseLikeOfPoint; }, function (e) { });
promiseOfPoint3D = promiseOfPoint.then(function (p) { return point3d; });
promiseOfPoint3D = promiseOfPoint.then(function (p) { return promiseOfPoint3D; });
promiseOfPoint3D = promiseOfPoint.then(function (p) { return promiseLikeOfPoint3D; });
promiseOfPoint3D = promiseOfPoint.then(function (p) { return point3d; }, function (e) { return point3d; });
promiseOfPoint3D = promiseOfPoint.then(function (p) { return promiseOfPoint3D; }, function (e) { return point3d; });
promiseOfPoint3D = promiseOfPoint.then(function (p) { return promiseLikeOfPoint3D; }, function (e) { return point3d; });
promiseOfPoint3D = promiseOfPoint.then(function (p) { return point3d; }, function (e) { return promiseOfPoint3D; });
promiseOfPoint3D = promiseOfPoint.then(function (p) { return point3d; }, function (e) { return promiseLikeOfPoint3D; });
promiseOfPoint3D = promiseOfPoint.then(function (p) { return point3d; }, function (e) { });
promiseOfPoint3D = promiseOfPoint.then(function (p) { return promiseOfPoint3D; }, function (e) { });
promiseOfPoint3D = promiseOfPoint.then(function (p) { return promiseLikeOfPoint3D; }, function (e) { });
promiseOfPoint = promiseOfPoint.catch(function (e) { return point; });
promiseOfPoint = promiseOfPoint.catch(function (e) { return promiseOfPoint; });
promiseOfPoint = promiseOfPoint.catch(function (e) { return promiseLikeOfPoint; });
promiseOfPoint = promiseOfPoint.catch(function (e) { });
promiseOfPoint3D = promiseOfPoint.catch(function (e) { return point3d; });
promiseOfPoint3D = promiseOfPoint.catch(function (e) { return promiseOfPoint3D; });
promiseOfPoint3D = promiseOfPoint.catch(function (e) { return promiseLikeOfPoint3D; });
promiseOfPoint = new Promise(function (resolve, reject) { return resolve(point); });
promiseOfPoint = new Promise(function (resolve, reject) { return resolve(promiseOfPoint); });
promiseOfPoint = new Promise(function (resolve, reject) { return resolve(promiseLikeOfPoint); });
promiseOfPoint = new Promise(function (resolve, reject) { return reject(e); });
promiseOfArrayOfPoint = Promise.all(arrayOfPoint);
promiseOfArrayOfPoint = Promise.all(iterableOfPoint);
promiseOfPoint = Promise.race(arrayOfPoint);
promiseOfPoint = Promise.race(iterableOfPoint);
promiseOfVoid = Promise.resolve();
promiseOfPoint = Promise.resolve(point3d);
promiseOfPoint = Promise.resolve(promiseOfPoint);
promiseOfPoint = Promise.resolve(promiseLikeOfPoint);
promiseOfVoid = Promise.reject(e);
promiseOfPoint = Promise.reject(e);
a = Reflect.apply(f, a, arrayLikeOfAny);
a = Reflect.construct(f, arrayLikeOfAny);
b = Reflect.defineProperty(a, s, pd);
b = Reflect.defineProperty(a, i, pd);
b = Reflect.defineProperty(a, sym, pd);
b = Reflect.deleteProperty(a, s);
b = Reflect.deleteProperty(a, i);
b = Reflect.deleteProperty(a, sym);
iterableIteratorOfAny = Reflect.enumerate(a);
a = Reflect.get(a, s, a);
a = Reflect.get(a, i, a);
a = Reflect.get(a, sym, a);
pd = Reflect.getOwnPropertyDescriptor(a, s);
pd = Reflect.getOwnPropertyDescriptor(a, i);
pd = Reflect.getOwnPropertyDescriptor(a, sym);
a = Reflect.getPrototypeOf(a);
b = Reflect.has(a, s);
b = Reflect.has(a, i);
b = Reflect.has(a, sym);
b = Reflect.isExtensible(a);
arrayOfPropertyKey = Reflect.ownKeys(a);
b = Reflect.preventExtensions(a);
b = Reflect.set(a, s, a, a);
b = Reflect.set(a, i, a, a);
b = Reflect.set(a, sym, a, a);
b = Reflect.setPrototypeOf(a, a);
var _a;
//# sourceMappingURL=es6-shim-tests.js.map